type Category {
    id: ID!
    name: String
    images: String
    users: [User]
    products: [Product]
}

type Product {
    id: ID!
    title: String
    quantity: Int
    description: String
    price: Float
    user: User
    category: Category
}

type User {
    id: ID!
    fullname: String
    email: String
    password: String
    phone: String
    categories: [Category]
    products: [Product]
}

# ====== INPUTS ======
input CategoryInput {
    name: String
    images: String
}

input ProductInput {
    title: String
    quantity: Int
    description: String
    price: Float
    userId: ID!
    categoryId: ID!
}

input UserInput {
    fullname: String
    email: String
    password: String
    phone: String
}

# ====== QUERY ======
type Query {
    productsSortedByPriceAsc: [Product]
    productsByCategory(categoryId: ID!): [Product]

    users: [User]
    products: [Product]
    categories: [Category]

    user(id: ID!): User
    product(id: ID!): Product
    category(id: ID!): Category
}

# ====== MUTATION ======
type Mutation {
    createUser(input: UserInput!): User
    updateUser(id: ID!, input: UserInput!): User
    deleteUser(id: ID!): Boolean

    createProduct(input: ProductInput!): Product
    updateProduct(id: ID!, input: ProductInput!): Product
    deleteProduct(id: ID!): Boolean

    createCategory(input: CategoryInput!): Category
    updateCategory(id: ID!, input: CategoryInput!): Category
    deleteCategory(id: ID!): Boolean

    # Quan há»‡ N-N User-Category
    attachUserToCategory(userId: ID!, categoryId: ID!): Category
    detachUserFromCategory(userId: ID!, categoryId: ID!): Category
}
